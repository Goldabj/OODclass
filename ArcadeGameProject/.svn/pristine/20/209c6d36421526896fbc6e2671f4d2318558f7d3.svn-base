import java.awt.BorderLayout;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class Main {
	public static StartScreen sScreen = new StartScreen();
	public static JFrame frame = new JFrame();
	public static String path = "";
	
	public static void main(String[] args) throws InterruptedException {

		ExecutorService threadPool = Executors.newFixedThreadPool(2);
		DiggerGame game = new DiggerGame();
		ScorePanel scorePanel = new ScorePanel(game);
		DiggerGameComponent gameComponent = new DiggerGameComponent(game, threadPool, scorePanel);
		
		
		frame.setVisible(false);
		frame.setBounds(100, 100, 856, 925);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		sScreen.setVisible(true);
		sScreen.setBounds(450,450, 286, 150);
		sScreen.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		while(sScreen.isVisible() == true){
				frame.setVisible(false);
		}
		frame.setVisible(true);

		frame.setTitle("MINECRAFT DIGGER. Level" + game.getCurrentLevel());
		frame.add(gameComponent);
		frame.add(scorePanel, BorderLayout.NORTH);
		
		while(!game.isGameOver()) {
			//scorePanel.update();
			frame.setTitle("Level" + game.getCurrentLevel());
			Thread updateGame = new UpdateGameThread(game, gameComponent);
			//updateGame.start();
			threadPool.execute(updateGame);
			updateGame.join(1000);
			try {
				updateGame.sleep(200);
			} catch (InterruptedException exception) {
				// TODO Auto-generated catch-block stub.
				exception.printStackTrace();
			}
			if(game.isGameWon()) {
				break;
			}
		}	
		
		if(game.isGameOver) {
			JOptionPane.showMessageDialog(gameComponent, "GAME OVER. SCORE: " + game.getScore());
			try {
				Thread.sleep(1000);
			} catch (InterruptedException exception) {
			}
			game = new DiggerGame();
			threadPool = Executors.newFixedThreadPool(2);
			scorePanel = new ScorePanel(game);
			gameComponent = new DiggerGameComponent(game, threadPool, scorePanel);
			
			main(null);
		}
		
		if(game.isGameWon()) {
			JOptionPane.showMessageDialog(gameComponent, "CONGRATS YOU WON!! SCORE: " + game.getScore());
			gameComponent.setFocusable(false);
			try {
				Thread.sleep(5000);
			} catch (InterruptedException exception) {}
			
			game = new DiggerGame();
			scorePanel = new ScorePanel(game);
			threadPool = Executors.newFixedThreadPool(2);
			gameComponent = new DiggerGameComponent(game, threadPool, scorePanel);
			main(null);
		}
	}
	
	

	/**
	 * 
	 * saves the current state of the game that was being played
	 *
	 * @param game
	 */
	public void saveGame(DiggerGame game) {

	}

}
